---
const { actives } = Astro.props

const cls = id => actives.has(id) ? "active" : "";
---

<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 40 40" stroke-width="0">
  <defs>
    <style>
      * { fill: transparent; }
      .active { fill: currentColor; stroke: currentColor; }
    </style>
  </defs>
  <filter filterUnits="userSpaceOnUse" id="outline" >
    <feMorphology in="SourceGraphic" result="DILATED" operator="dilate" radius="0.05" />
  </filter>
  {[0,1,2,3].map(row => [0,1,2,3].map(col => {
    const id = 2 * col + 8 * row;
    const flip = row % 2 ? !(col % 2) : col % 2;
    return (
      <path id={id}     class={cls(id)}   d=`M ${col*10} ${row*10 + (flip ? 10 : 0)} v ${flip ? -10 : 10} h 10 Z` />
      <path id={id + 1} class={cls(id+1)} d=`M ${col*10} ${row*10 + (flip ? 10 : 0)} h 10 v ${flip ? -10 : 10} Z` />
    );
  }))}
</svg>

<style>
  svg path {
    filter: url(#outline);
  }
</style>
