period: Q2 2025
project_name: Amaru

# Project status (active, inactive, initiating, etc.)
status: Active

# Problems that require board attention
problems: None yet.

# Community changes (last committer addition)
changelog: |
  - Created a first version of the simulation environment in Haskell and then in Rust;
  - Extended data collected for snapshot testing, refined scripts and methology for getting those pieces of data.
  - Completed runtime metrics reported by Amaru to cover cpu usage, memory usage and disk I/O.
  - Implemented the responder side of the node-to-node protocol, enabling Amaru nodes to respond to other nodes (Amaru or not)
  - [Demo recorded on the 27th June](https://pragma.io/projects/amaru/#Ledger%20rules,%20time%20travelling%20&%20node-to-node%20conversations.) demonstrating all of the above
  - Reworked the scopes and effort needed for each scope of the project, refined timelines and prospected vendors.
  - Recapped the information related: https://adastat.net/governances/bd488931f792651fefa9c6fda185a2c6cec83245b51d994e33090ce36e29cc2600;
  - Successfully passed the info action threshold for our proposed budget with 80.43% approval from delegate representatives;
  - Expanded support to Preview and Mainnet networks
  - Developed a [treasury management smart contract](https://github.com/pragma-org/amaru-treasury) for Amaru treasuries
  - Created [Amaru-doctor](https://github.com/jeluard/amaru-doctor): a terminal user interface to explore Amaru's on disk storage and runtime traces & metrics. 
  
# Next planned steps (new releases, significant changes, etc.)
next: |
  - Proceed with de-risking (part of) the budgets with stable coins if and once the withdrawals are accepted. 
  - Implement all the relay node requirements to meet a Q3 delivery target;

# Reflection & Performance:
comments: |
  - Setup a discussion with all the information related to our recurring meeting of the Maintainer Committee: https://github.com/pragma-org/amaru/discussions/91;
  - Getting treasury withdrawals was tricky, required a lot of knowledge and had a lot of room for human error;
