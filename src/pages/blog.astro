---
import { getCollection } from 'astro:content';

import Layout from '../layouts/base.astro';
import Hero from '../components/Hero.astro';
import Section from '../components/Section.astro';

const posts = await getCollection('blog');
---

<Layout title="Blog" description="Explore our latest posts">
  <main class="flex-col">
    <Hero
      tag="Blog"
      title="Latest Articles"
      id="hero"
    />

    <Section
      tag=""
      title=""
      id="recent-posts">
      <div class="grid">
        {posts.map(async post => {
          const publishDate = new Date(post.data.publishDate);
          const formattedDate = publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
          const { remarkPluginFrontmatter } = await post.render();

          return (
          <article class="post-card">
            <div class="post-card-content">
              <div class="post-image-container">
                <img src={post.data.image} alt={post.data.title} class="post-image" />
              </div>
              <div class="post-text">
                <h2><a href={`/blog/${post.slug}`}>{post.data.title}</a></h2>
                <p class="meta">By {post.data.author} on {formattedDate} âˆ™ {remarkPluginFrontmatter.minutesRead}</p>
                <p class="justified">{post.data.excerpt}</p>
                <a href={`/blog/${post.slug}`} class="read-more">Read More</a>
              </div>
            </div>
          </article>
          );
        })}
      </div>
    </Section>
  </main>
</Layout>

<style>
  .grid {
    display: grid;
    grid-template-rows: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--gap-md);
  }

  .post-card-content {
    display: flex;
    align-items: center;
    gap: var(--gap-md);
  }

  .post-image-container {
    width: 14rem;
    height: 14rem;
    overflow: hidden;
    border-radius: var(--radius-md);
    flex-shrink: 0;
  }

  .post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .post-text {
    flex-grow: 1;
  }

  .post-card {
    padding: var(--gap-md);
    border: 1px solid var(--color-secondary);
    border-radius: var(--radius-md);
    transition: background-color 0.3s ease;
  }

  .post-card:hover {
    background-color: var(--color-bg-hover);
  }

  h2 {
    margin-bottom: var(--gap-xs);
    font-size: 1.5rem;
  }

  h2 a {
    text-decoration: none;
    position: relative;
    color: var(--color-secondary);
  }

  h2 a::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -0.1rem;
    width: 100%;
    height: 1px;
    background-color: var(--color-secondary);
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease;
  }

  h2 a:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }

  .meta {
    font-size: 0.9rem;
    color: var(--color-secondary);
    margin-bottom: var(--gap-sm);
  }

  .read-more {
    font-size:0.8rem;
    color: var(--color-secondary);
    font-weight: bold;
    margin-top: var(--gap-md);
    display: inline-block;
  }

  @media (max-width: 768px) {
    .post-card-content {
      flex-direction: column;
      align-items: flex-start;
    }

    .post-image-container {
      width: 100%;
      height: auto;
    }

    .post-image {
      height: auto;
    }
  }
</style>
